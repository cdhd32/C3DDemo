#pragma once
#include "../pch.h"

//PrimitiveGeoObject
//기본 3차원 기하도형 기본 정보, 버텍스 정보 같은 거 저장하는 곳
//Line(선, 디버그용 노말 표시나 grid 그릴 때 사용),

//D3D11_PRIMITIVE_TOPOLOGY_LINELIST로 그릴 때 사용

struct VB_POS
{
	float x, y, z; 			//좌표(Position)
};

enum
{
	LINE_START,
	LINE_END,

	_LINE_MAX
};
//3D Line 시작과 끝 정점 저장
struct LINE
{
	VB_POS vtx[2];
};

//풀 버텍스 저장용 버퍼 구조 position이 겹칠 수도 있음
struct VB_DEFAULT
{
	float x, y, z; 			//좌표(Position)
	float nx, ny, nz;		//노멀 : Normal
	float u, v;				//텍스처 좌표: Texture-Coordinates 
};

//D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST로 drawindexed 할 때 인덱스 버퍼로 사용
enum
{
	FACE_A,
	FACE_B,
	FACE_C,

	_FACE_MAX
};
struct IB_FACE {
	Vector3 vtx[3];
};

//Cube fullvtx model(루빅스 큐브 테스트 용)
//기본 버텍스 정보 정의(3d 좌표, 노멀 벡터, 텍스처 좌표 UV)
//인덱스 정보 없이 Draw로 그리면 됩니다.
static constexpr VB_DEFAULT CUBE_VTX_FULL[] = {
	//( Face#0)
	//pos				normal			uv
	{ -1.0, 1.0,-1.0 ,  0.0, 0.0,-1.0,  0.0, 0.0 },		//v0	
	{  1.0, 1.0,-1.0 ,  0.0, 0.0,-1.0,  1.0, 0.0 },		//v1
	{ -1.0,-1.0,-1.0 ,  0.0, 0.0,-1.0,  0.0, 1.0 },		//v2
	//( Face#1)
	{ -1.0,-1.0,-1.0 ,  0.0, 0.0,-1.0 ,  0.0, 1.0 },
	{  1.0, 1.0,-1.0 ,  0.0, 0.0,-1.0 ,  1.0, 0.0 },
	{  1.0,-1.0,-1.0 ,  0.0, 0.0,-1.0 ,  1.0, 1.0 },

	//뒷면.  (Face#3) :  
	{  1.0, 1.0, 1.0 ,  0.0, 0.0, 1.0,  0.0, 0.0 },
	{ -1.0, 1.0, 1.0 ,  0.0, 0.0, 1.0,  1.0, 0.0 },
	{ -1.0,-1.0, 1.0 ,  0.0, 0.0, 1.0,  1.0, 1.0 },
	//		  (Face#4)
	{  1.0, 1.0, 1.0 ,  0.0, 0.0, 1.0,  0.0, 0.0 },
	{ -1.0,-1.0, 1.0 ,  0.0, 0.0, 1.0,  1.0, 1.0 },
	{  1.0,-1.0, 1.0 ,  0.0, 0.0, 1.0,  0.0, 1.0 },


	// 우측면. (Face#5)
	{  1.0, 1.0,-1.0 ,  1.0, 0.0, 0.0,  0.0, 0.0 },
	{  1.0, 1.0, 1.0 ,  1.0, 0.0, 0.0,  1.0, 0.0 },
	{  1.0,-1.0,-1.0 ,  1.0, 0.0, 0.0,  0.0, 1.0 },
	//			(Face#6)
	{  1.0,-1.0,-1.0 ,  1.0, 0.0, 0.0,  0.0, 1.0 },
	{  1.0, 1.0, 1.0 ,  1.0, 0.0, 0.0,  1.0, 0.0 },
	{  1.0,-1.0, 1.0 ,  1.0, 0.0, 0.0,  1.0, 1.0 },


	// 좌측면. (Face#7)
	{ -1.0, 1.0, 1.0 ,  -1.0, 0.0, 0.0,  0.0, 0.0 },
	{ -1.0, 1.0,-1.0 ,  -1.0, 0.0, 0.0,  1.0, 0.0 },
	{ -1.0,-1.0,-1.0 ,  -1.0, 0.0, 0.0,  1.0, 1.0 },
	//			(Face#8)
	{ -1.0, 1.0, 1.0 ,  -1.0, 0.0, 0.0,  0.0, 0.0 },
	{ -1.0,-1.0,-1.0 ,  -1.0, 0.0, 0.0,  1.0, 1.0 },
	{ -1.0,-1.0, 1.0 ,  -1.0, 0.0, 0.0,  0.0, 1.0 },


	//상부.  ( Face#9)
	{ -1.0, 1.0, 1.0 ,  0.0, 1.0, 0.0,  0.0, 0.0 },
	{  1.0, 1.0, 1.0 ,  0.0, 1.0, 0.0,  1.0, 0.0 },
	{ -1.0, 1.0,-1.0 ,  0.0, 1.0, 0.0,  0.0, 1.0 },
	//		 ( Face#10)
	{ -1.0, 1.0,-1.0 ,  0.0, 1.0, 0.0,  0.0, 1.0 },
	{  1.0, 1.0, 1.0 ,  0.0, 1.0, 0.0,  1.0, 0.0 },
	{  1.0, 1.0,-1.0 ,  0.0, 1.0, 0.0,  1.0, 1.0 },


	//하부.  ( Face#11)
	{  1.0,-1.0, 1.0 , 0.0,-1.0, 0.0,  0.0, 0.0 },
	{ -1.0,-1.0, 1.0 , 0.0,-1.0, 0.0,  1.0, 0.0 },
	{ -1.0,-1.0,-1.0 , 0.0,-1.0, 0.0,  1.0, 1.0 },
	//		 ( Face#12)
	{  1.0,-1.0, 1.0 , 0.0,-1.0, 0.0,  0.0, 0.0 },
	{ -1.0,-1.0,-1.0 , 0.0,-1.0, 0.0,  1.0, 1.0 },
	{  1.0,-1.0,-1.0 , 0.0,-1.0, 0.0,  0.0, 1.0 },
};


//QuadPlane(빌보딩 또는 UI 그리기), 사각형 면 그리기
VB_DEFAULT quadPlane[] =
{
	//pos		uv
	{ 0, 0, 0,  0, 0 },
	{ 1, 0, 0,  1, 0 },
	{ 0, 1, 0,  0, 1 },
	{ 1, 1, 0,  1, 1 },
};